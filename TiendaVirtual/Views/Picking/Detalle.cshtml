@{ 
    Layout = null;

    var pedido = new List<TiendaVirtual.Models.PickingPedidoDetalle>();
    pedido = (List<TiendaVirtual.Models.PickingPedidoDetalle>)ViewBag.DetallePedido;

    string pedidoId = Convert.ToString(pedido[0].PedidoId);
}



<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.0/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

    <style>
        body {
            background-color: white;
        }

        .row * {
            font-family: 'Montserrat', sans-serif;
            font-size: 14px;
        }

        .row-producto {
            border-radius: 8px;
            background: aliceblue;
        }

        .pick-ok {
            background-color: #6BCB77;
        }

    </style>

</head>
<body>

    <h2 class="ml-2"># Pedido: @pedidoId </h2>

    <input type="hidden" id="pedidoId" name="pedidoId" value="@pedidoId">
    <div class="row ml-2 mr-1">
        <div class="row mr-0 pr-0 pedido" id="pedido">

            @{
                foreach (var p in pedido)
                {
                    <div class="row mb-1 ml-2 mr-2 p-2 border border-secondary row-producto" id="productId-@p.ProductId">
                        <div class="col p-1 border-bottom">Location: @p.LocationCode</div>
                        <div class="col p-1 border-bottom">UPC: @p.UpcCode</div>
                        <div class="w-100"></div>
                        <div class="col p-1 border-bottom">Producto: @p.ProductName</div>
                        <div class="w-100"></div>
                        <div class="col p-1 border-bottom">Cantidad: <span id="quantity"> @p.Cantidad </span></div>
                        <div class="col p-1 border-bottom">

                            <div class="input-group">
                                <span class="input-group-prepend">
                                    <button type="button" class="btn btn-secondary btn-number" disabled data-type="minus" onclick="fnAccionAgregarRemover(1, @p.ProductId)">
                                        -
                                    </button>
                                </span>
                                <input type="number" id="qty-pick-@p.ProductId" class="form-control text-center border-0 input-qty " disabled placeholder="Cantidad" value="@p.CantidadPick" onchange="return fnValidarQty(this, @p.ProductId);">
                                <span class="input-group-append">
                                    <button type="button" class="btn btn-secondary btn-number" disabled data-type="plus" onclick="fnAccionAgregarRemover(2, @p.ProductId)">
                                        +
                                    </button>
                                </span>
                            </div>
                        </div>
                        <div class="w-100"></div>
                    </div>
                }
            }

        <div class="row mb-1 ml-2 mr-2 p-1 d-flex justify-content-center">
            <a class="btn btn-primary mb-3" href="#" role="button" onclick="fnUpdatePedidoPick(2)">Preparar</a>
            <a class="btn btn-success mb-1" href="#" role="button" onclick="fnUpdatePedidoPick(3)">Finalizar</a>
            <a class="btn btn-warning" href="#" role="button" onclick="fnUpdatePedidoPick(4)">En Pausa</a>

        </div>

        </div>
    </div>
    <script type="text/javascript">

        var Products = [];
        document.addEventListener('DOMContentLoaded', async () => {
            Products = @Html.Raw(Json.Encode(@pedido));

            Products.forEach((aValue, aIndex) => {
                let eQty = String('qty-pick-' + aValue.ProductId);
                let element = document.getElementById(eQty);
                fnValidarQty(element, aValue.ProductId);
                
            });
        });

        function fnValidarQty(eQty, productId) {
            if (parseInt(eQty.value) <= 0) {
                eQty.value = 0;
                return false;
            }
            else {
                let rQuantity = parseInt(document.getElementById('quantity').textContent);
                if (parseInt(eQty.value) > rQuantity) {
                    fnCambiarColor(0, productId);
                    swal("La cantidad es ingresada es mayor a la solicitada.", '', "error");

                    eQty.value = 0;
                    return;
                }

                if (parseInt(eQty.value) == rQuantity) {
                    fnCambiarColor(1, productId);
                }
                else {
                    fnCambiarColor(0, productId);
                }


            }
            return true;
        }

        function fnAccionAgregarRemover(accion, productId) {
            let eQty = String('qty-pick-' + productId);
            let QtyValue = parseInt(document.getElementById(eQty).value);


            if (accion == 1 && QtyValue > 0) {
                document.getElementById(eQty).value = (QtyValue - 1)
            }

            if (accion == 2 && QtyValue >= 0) {
                document.getElementById(eQty).value = (QtyValue + 1);

                QtyValue = parseInt(document.getElementById(eQty).value);

                let rQuantity = parseInt(document.getElementById('quantity').textContent);
                if (QtyValue > rQuantity) {
                    document.getElementById(eQty).value = 0;
                    fnCambiarColor(0, productId);
                    swal("La cantidad es ingresada es mayor a la solicitada.", '', "error");
                    return;
                }

                if (QtyValue == rQuantity) {
                    fnCambiarColor(1, productId);
                }
                else {
                    fnCambiarColor(0, productId);
                }
            }
        }

        function fnCambiarColor(accion, productId) {
            let elementId = 'productId-' + productId;
            let element = document.getElementById(elementId);

            if (accion == 1) {
                element.classList.add("pick-ok");
            }
            else {
                element.classList.remove("pick-ok");
            }
        }


        async function fnUpdatePedidoPick(EstadoId) {
            let confirmacion = 'no';

            confirmacion = await swal("¿Está seguro que desea realizar esta acción?", '', {
                buttons: {
                    cancel: false,
                    buttonYes: {
                        text: "Sí",
                        value: "si",
                    },
                    buttonNo: {
                        text: "No",
                        value: "no",
                    },
                    confirm: false,

                },
            });

            if (confirmacion == 'no') { return; }


            if (EstadoId == 2) {
                $(".btn-number").removeAttr('disabled');
                $(".input-qty").removeAttr('disabled');
            }

            let pedidoId = document.getElementById('pedidoId').value;

            let pedidoDetalle = [];
            Products.forEach((aValue, aIndex) => {
                let eQty = String('qty-pick-' + aValue.ProductId);
                let QtyPick = parseInt(document.getElementById(eQty).value);

                pedidoDetalle.push({ "ProductId": parseInt(aValue.ProductId), "Cantidad": parseInt(QtyPick) });
            });

            let Pedido = { "PedidoId": pedidoId, "EstadoId": EstadoId, "detalle": pedidoDetalle };

            $.ajax({
                type: "POST",
                url: '/Picking/PickPedido',
                data: JSON.stringify(Pedido),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    

                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });

            if (EstadoId != 2) {
                window.location.href = "/Picking/Index";
            }
        }


    </script>
</body>
</html>



